// Generated by CoffeeScript 1.9.3

/*
broadcast 1.0
JavaScript function passing done the Scratch way
open-source under the MIT license, (c) Ethan Arterberry, 2015

<broadcast.coffee>
written in CoffeeScript, JavaScript done right
*/

var Broadcast;

Broadcast = (function() {
  function Broadcast() {
    this.broadcasts = {};
    if (typeof console !== "undefined" && console !== null) {
      console.log("New Broadcast class created.");
    }
  }

  Broadcast.prototype.create = function(id, execute) {
    if (id && execute) {
      this.broadcasts["" + id] = execute;
      return typeof console !== "undefined" && console !== null ? console.log("Broadcast with ID \"" + id + "\" has been set up to execute functions [%s] when called.", execute.join(", ")) : void 0;
    } else {
      return typeof console !== "undefined" && console !== null ? console.error("Please pass all parameters (id, execute) to Broadcast::create.") : void 0;
    }
  };

  Broadcast.prototype.shout = function(id, _callback) {
    var i, item, j, len, ref;
    if (id) {
      ref = this.broadcasts["" + id];
      for (i = j = 0, len = ref.length; j < len; i = ++j) {
        item = ref[i];
        eval(item);
      }
      if (_callback) {
        return _callback();
      }
    } else {
      return typeof console !== "undefined" && console !== null ? console.error("Please pass the \"id\" parameter to Broadcast::shout.") : void 0;
    }
  };

  Broadcast.prototype.modify = function(id, execute, newid) {
    var oldexecute;
    if (id) {
      if (execute) {
        oldexecute = this.broadcasts["" + id];
        this.broadcasts["" + id] = execute;
        if (typeof console !== "undefined" && console !== null) {
          console.log("Broadcast with ID \"" + id + "\" has been modified to execute functions [%s] instead of functions [%s] when called.", execute.join(", "), oldexecute.join(", "));
        }
      }
      if (newid) {
        this.broadcasts["" + newid] = this.broadcasts["" + id];
        delete this.broadcasts["" + id];
        return typeof console !== "undefined" && console !== null ? console.log("Broadcast with ID \"" + id + "\" has been renamed to \"" + newid + "\".") : void 0;
      }
    } else {
      return typeof console !== "undefined" && console !== null ? console.error("Please pass the \"id\" parameter to Broadcast::modify.") : void 0;
    }
  };

  return Broadcast;

})();